https://tproger.ru/articles/asynchronous-programming/
В очень крупных программах, окно программы постоянно ждет завершения каких-либо процессов
(чтение или ввод данных в БД, Диск, поиск информации в сети и т.д.), т.е. события независящего 
от программы и большую часть времени поток выполнения заблокирован. В небольших программах 
это решается с помощью многопоточности. Но когда количесвто пользователей увеличивается, 
производительность сервера падает, из-за постоянного изменения контекста исполнения потока.
Здесь на помощь приходит асинхронное программирование, т.е. пока исполняется асинхронный
метод, главный поток неблокируется и может продолжить вызову других методов.
Но асинхронное программирование надо использовать только там, где это необходимо. Т.к. 
написание программы с помощью асинхронного метода также составляет немалый труд и, если
можно было обойтись и без него, то время программиста уйдет попусту.
